// Code generated by protoc-gen-go.
// source: DataType.proto
// DO NOT EDIT!

/*
Package DataType is a generated protocol buffer package.

It is generated from these files:
	DataType.proto

It has these top-level messages:
	OrderInfo
	PositionInfo
	TimeDuration
	AlgoInfo
	ReqTickerInfo
	RspTickerInfo
	ReqSendOrder
	RspSendOrder
	ReqCancelOrder
	RspCancelOrder
	ReqOrdersInfo
	RspOrdersInfo
	ReqPosition
	RspPosition
	ReqAccount
	RspAccount
	ReqAlgoOrder
	RspAlgoOrder
	DepthMarketData
	StaticMarketData
	TOHLCV
	ReqKLine
	RspKLine
	ReqTick
	RspTick
	HeartBeat
*/
package DataType

import proto "code.google.com/p/goprotobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type ConstDefine int32

const (
	ConstDefine_E_ReqSendOrder     ConstDefine = 1
	ConstDefine_E_RspSendOrder     ConstDefine = 2
	ConstDefine_E_ReqCancelOrder   ConstDefine = 3
	ConstDefine_E_RspCancelOrder   ConstDefine = 4
	ConstDefine_E_ReqOrdersInfo    ConstDefine = 5
	ConstDefine_E_RspOrdersInfo    ConstDefine = 6
	ConstDefine_E_ReqPosition      ConstDefine = 7
	ConstDefine_E_RspPosition      ConstDefine = 8
	ConstDefine_E_ReqAccount       ConstDefine = 9
	ConstDefine_E_RspAccount       ConstDefine = 10
	ConstDefine_E_ReqAlgoOrder     ConstDefine = 11
	ConstDefine_E_RspAlgoOrder     ConstDefine = 12
	ConstDefine_E_ReqTickerInfo    ConstDefine = 13
	ConstDefine_E_RspTickerInfo    ConstDefine = 14
	ConstDefine_E_DepthMarketData  ConstDefine = 100
	ConstDefine_E_StaticMarketData ConstDefine = 101
	ConstDefine_E_ReqKLine         ConstDefine = 102
	ConstDefine_E_RspKLine         ConstDefine = 103
	ConstDefine_E_ReqTick          ConstDefine = 104
	ConstDefine_E_RspTick          ConstDefine = 105
	ConstDefine_E_HeartBeat        ConstDefine = 1000000
)

var ConstDefine_name = map[int32]string{
	1:       "E_ReqSendOrder",
	2:       "E_RspSendOrder",
	3:       "E_ReqCancelOrder",
	4:       "E_RspCancelOrder",
	5:       "E_ReqOrdersInfo",
	6:       "E_RspOrdersInfo",
	7:       "E_ReqPosition",
	8:       "E_RspPosition",
	9:       "E_ReqAccount",
	10:      "E_RspAccount",
	11:      "E_ReqAlgoOrder",
	12:      "E_RspAlgoOrder",
	13:      "E_ReqTickerInfo",
	14:      "E_RspTickerInfo",
	100:     "E_DepthMarketData",
	101:     "E_StaticMarketData",
	102:     "E_ReqKLine",
	103:     "E_RspKLine",
	104:     "E_ReqTick",
	105:     "E_RspTick",
	1000000: "E_HeartBeat",
}
var ConstDefine_value = map[string]int32{
	"E_ReqSendOrder":     1,
	"E_RspSendOrder":     2,
	"E_ReqCancelOrder":   3,
	"E_RspCancelOrder":   4,
	"E_ReqOrdersInfo":    5,
	"E_RspOrdersInfo":    6,
	"E_ReqPosition":      7,
	"E_RspPosition":      8,
	"E_ReqAccount":       9,
	"E_RspAccount":       10,
	"E_ReqAlgoOrder":     11,
	"E_RspAlgoOrder":     12,
	"E_ReqTickerInfo":    13,
	"E_RspTickerInfo":    14,
	"E_DepthMarketData":  100,
	"E_StaticMarketData": 101,
	"E_ReqKLine":         102,
	"E_RspKLine":         103,
	"E_ReqTick":          104,
	"E_RspTick":          105,
	"E_HeartBeat":        1000000,
}

func (x ConstDefine) Enum() *ConstDefine {
	p := new(ConstDefine)
	*p = x
	return p
}
func (x ConstDefine) String() string {
	return proto.EnumName(ConstDefine_name, int32(x))
}
func (x *ConstDefine) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ConstDefine_value, data, "ConstDefine")
	if err != nil {
		return err
	}
	*x = ConstDefine(value)
	return nil
}

type OrderStatus int32

const (
	OrderStatus_OrderStatus_NIL                OrderStatus = 0
	OrderStatus_OrderStatus_New                OrderStatus = 1
	OrderStatus_OrderStatus_PartFill           OrderStatus = 2
	OrderStatus_OrderStatus_PartFillPartCancel OrderStatus = 3
	OrderStatus_OrderStatus_Filled             OrderStatus = 4
	OrderStatus_OrderStatus_Rejected           OrderStatus = 5
	OrderStatus_OrderStatus_Canceling          OrderStatus = 6
	OrderStatus_OrderStatus_Canceled           OrderStatus = 7
)

var OrderStatus_name = map[int32]string{
	0: "OrderStatus_NIL",
	1: "OrderStatus_New",
	2: "OrderStatus_PartFill",
	3: "OrderStatus_PartFillPartCancel",
	4: "OrderStatus_Filled",
	5: "OrderStatus_Rejected",
	6: "OrderStatus_Canceling",
	7: "OrderStatus_Canceled",
}
var OrderStatus_value = map[string]int32{
	"OrderStatus_NIL":                0,
	"OrderStatus_New":                1,
	"OrderStatus_PartFill":           2,
	"OrderStatus_PartFillPartCancel": 3,
	"OrderStatus_Filled":             4,
	"OrderStatus_Rejected":           5,
	"OrderStatus_Canceling":          6,
	"OrderStatus_Canceled":           7,
}

func (x OrderStatus) Enum() *OrderStatus {
	p := new(OrderStatus)
	*p = x
	return p
}
func (x OrderStatus) String() string {
	return proto.EnumName(OrderStatus_name, int32(x))
}
func (x *OrderStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(OrderStatus_value, data, "OrderStatus")
	if err != nil {
		return err
	}
	*x = OrderStatus(value)
	return nil
}

type OrderDirect int32

const (
	OrderDirect_OrderDirect_Buy  OrderDirect = 1
	OrderDirect_OrderDirect_Sell OrderDirect = 2
)

var OrderDirect_name = map[int32]string{
	1: "OrderDirect_Buy",
	2: "OrderDirect_Sell",
}
var OrderDirect_value = map[string]int32{
	"OrderDirect_Buy":  1,
	"OrderDirect_Sell": 2,
}

func (x OrderDirect) Enum() *OrderDirect {
	p := new(OrderDirect)
	*p = x
	return p
}
func (x OrderDirect) String() string {
	return proto.EnumName(OrderDirect_name, int32(x))
}
func (x *OrderDirect) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(OrderDirect_value, data, "OrderDirect")
	if err != nil {
		return err
	}
	*x = OrderDirect(value)
	return nil
}

type OrderOpenClose int32

const (
	OrderOpenClose_OrderOpenClose_Open  OrderOpenClose = 1
	OrderOpenClose_OrderOpenClose_Close OrderOpenClose = 2
)

var OrderOpenClose_name = map[int32]string{
	1: "OrderOpenClose_Open",
	2: "OrderOpenClose_Close",
}
var OrderOpenClose_value = map[string]int32{
	"OrderOpenClose_Open":  1,
	"OrderOpenClose_Close": 2,
}

func (x OrderOpenClose) Enum() *OrderOpenClose {
	p := new(OrderOpenClose)
	*p = x
	return p
}
func (x OrderOpenClose) String() string {
	return proto.EnumName(OrderOpenClose_name, int32(x))
}
func (x *OrderOpenClose) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(OrderOpenClose_value, data, "OrderOpenClose")
	if err != nil {
		return err
	}
	*x = OrderOpenClose(value)
	return nil
}

type OrderInfo struct {
	TickerName       *string         `protobuf:"bytes,1,opt" json:"TickerName,omitempty"`
	Account          *string         `protobuf:"bytes,2,opt" json:"Account,omitempty"`
	Time             *uint64         `protobuf:"varint,3,opt,def=0" json:"Time,omitempty"`
	Volume           *uint64         `protobuf:"varint,4,opt,def=0" json:"Volume,omitempty"`
	Price            *float64        `protobuf:"fixed64,5,opt,def=0" json:"Price,omitempty"`
	LastFilled       *uint64         `protobuf:"varint,6,opt,def=0" json:"LastFilled,omitempty"`
	TotalFilled      *uint64         `protobuf:"varint,7,opt,def=0" json:"TotalFilled,omitempty"`
	Explain          *string         `protobuf:"bytes,8,opt" json:"Explain,omitempty"`
	Status           *OrderStatus    `protobuf:"varint,9,opt,enum=DataType.OrderStatus" json:"Status,omitempty"`
	Direct           *OrderDirect    `protobuf:"varint,10,opt,enum=DataType.OrderDirect" json:"Direct,omitempty"`
	OpenClose        *OrderOpenClose `protobuf:"varint,11,opt,enum=DataType.OrderOpenClose" json:"OpenClose,omitempty"`
	OrderID          *string         `protobuf:"bytes,12,opt" json:"OrderID,omitempty"`
	IsForce          *bool           `protobuf:"varint,13,opt,def=0" json:"IsForce,omitempty"`
	IsToday          *bool           `protobuf:"varint,14,opt,def=1" json:"IsToday,omitempty"`
	LastMatchTime    *uint64         `protobuf:"varint,15,opt,def=0" json:"LastMatchTime,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *OrderInfo) Reset()         { *m = OrderInfo{} }
func (m *OrderInfo) String() string { return proto.CompactTextString(m) }
func (*OrderInfo) ProtoMessage()    {}

const Default_OrderInfo_Time uint64 = 0
const Default_OrderInfo_Volume uint64 = 0
const Default_OrderInfo_Price float64 = 0
const Default_OrderInfo_LastFilled uint64 = 0
const Default_OrderInfo_TotalFilled uint64 = 0
const Default_OrderInfo_IsForce bool = false
const Default_OrderInfo_IsToday bool = true
const Default_OrderInfo_LastMatchTime uint64 = 0

func (m *OrderInfo) GetTickerName() string {
	if m != nil && m.TickerName != nil {
		return *m.TickerName
	}
	return ""
}

func (m *OrderInfo) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

func (m *OrderInfo) GetTime() uint64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return Default_OrderInfo_Time
}

func (m *OrderInfo) GetVolume() uint64 {
	if m != nil && m.Volume != nil {
		return *m.Volume
	}
	return Default_OrderInfo_Volume
}

func (m *OrderInfo) GetPrice() float64 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return Default_OrderInfo_Price
}

func (m *OrderInfo) GetLastFilled() uint64 {
	if m != nil && m.LastFilled != nil {
		return *m.LastFilled
	}
	return Default_OrderInfo_LastFilled
}

func (m *OrderInfo) GetTotalFilled() uint64 {
	if m != nil && m.TotalFilled != nil {
		return *m.TotalFilled
	}
	return Default_OrderInfo_TotalFilled
}

func (m *OrderInfo) GetExplain() string {
	if m != nil && m.Explain != nil {
		return *m.Explain
	}
	return ""
}

func (m *OrderInfo) GetStatus() OrderStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return OrderStatus_OrderStatus_NIL
}

func (m *OrderInfo) GetDirect() OrderDirect {
	if m != nil && m.Direct != nil {
		return *m.Direct
	}
	return OrderDirect_OrderDirect_Buy
}

func (m *OrderInfo) GetOpenClose() OrderOpenClose {
	if m != nil && m.OpenClose != nil {
		return *m.OpenClose
	}
	return OrderOpenClose_OrderOpenClose_Open
}

func (m *OrderInfo) GetOrderID() string {
	if m != nil && m.OrderID != nil {
		return *m.OrderID
	}
	return ""
}

func (m *OrderInfo) GetIsForce() bool {
	if m != nil && m.IsForce != nil {
		return *m.IsForce
	}
	return Default_OrderInfo_IsForce
}

func (m *OrderInfo) GetIsToday() bool {
	if m != nil && m.IsToday != nil {
		return *m.IsToday
	}
	return Default_OrderInfo_IsToday
}

func (m *OrderInfo) GetLastMatchTime() uint64 {
	if m != nil && m.LastMatchTime != nil {
		return *m.LastMatchTime
	}
	return Default_OrderInfo_LastMatchTime
}

type PositionInfo struct {
	TickerName         *string  `protobuf:"bytes,1,opt" json:"TickerName,omitempty"`
	Account            *string  `protobuf:"bytes,2,opt" json:"Account,omitempty"`
	LongAvgPrice       *float64 `protobuf:"fixed64,3,opt" json:"LongAvgPrice,omitempty"`
	ShortAvgPrice      *float64 `protobuf:"fixed64,4,opt" json:"ShortAvgPrice,omitempty"`
	ValidLongVolume    *uint64  `protobuf:"varint,5,opt,def=0" json:"ValidLongVolume,omitempty"`
	ClosingLongVolume  *uint64  `protobuf:"varint,6,opt,def=0" json:"ClosingLongVolume,omitempty"`
	QueuingLongVolume  *uint64  `protobuf:"varint,7,opt,def=0" json:"QueuingLongVolume,omitempty"`
	ValidShortVolume   *uint64  `protobuf:"varint,8,opt,def=0" json:"ValidShortVolume,omitempty"`
	ClosingShortVolume *uint64  `protobuf:"varint,9,opt,def=0" json:"ClosingShortVolume,omitempty"`
	QueuingShortVolume *uint64  `protobuf:"varint,10,opt,def=0" json:"QueuingShortVolume,omitempty"`
	Margin             *float64 `protobuf:"fixed64,11,opt,def=0" json:"Margin,omitempty"`
	XXX_unrecognized   []byte   `json:"-"`
}

func (m *PositionInfo) Reset()         { *m = PositionInfo{} }
func (m *PositionInfo) String() string { return proto.CompactTextString(m) }
func (*PositionInfo) ProtoMessage()    {}

const Default_PositionInfo_ValidLongVolume uint64 = 0
const Default_PositionInfo_ClosingLongVolume uint64 = 0
const Default_PositionInfo_QueuingLongVolume uint64 = 0
const Default_PositionInfo_ValidShortVolume uint64 = 0
const Default_PositionInfo_ClosingShortVolume uint64 = 0
const Default_PositionInfo_QueuingShortVolume uint64 = 0
const Default_PositionInfo_Margin float64 = 0

func (m *PositionInfo) GetTickerName() string {
	if m != nil && m.TickerName != nil {
		return *m.TickerName
	}
	return ""
}

func (m *PositionInfo) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

func (m *PositionInfo) GetLongAvgPrice() float64 {
	if m != nil && m.LongAvgPrice != nil {
		return *m.LongAvgPrice
	}
	return 0
}

func (m *PositionInfo) GetShortAvgPrice() float64 {
	if m != nil && m.ShortAvgPrice != nil {
		return *m.ShortAvgPrice
	}
	return 0
}

func (m *PositionInfo) GetValidLongVolume() uint64 {
	if m != nil && m.ValidLongVolume != nil {
		return *m.ValidLongVolume
	}
	return Default_PositionInfo_ValidLongVolume
}

func (m *PositionInfo) GetClosingLongVolume() uint64 {
	if m != nil && m.ClosingLongVolume != nil {
		return *m.ClosingLongVolume
	}
	return Default_PositionInfo_ClosingLongVolume
}

func (m *PositionInfo) GetQueuingLongVolume() uint64 {
	if m != nil && m.QueuingLongVolume != nil {
		return *m.QueuingLongVolume
	}
	return Default_PositionInfo_QueuingLongVolume
}

func (m *PositionInfo) GetValidShortVolume() uint64 {
	if m != nil && m.ValidShortVolume != nil {
		return *m.ValidShortVolume
	}
	return Default_PositionInfo_ValidShortVolume
}

func (m *PositionInfo) GetClosingShortVolume() uint64 {
	if m != nil && m.ClosingShortVolume != nil {
		return *m.ClosingShortVolume
	}
	return Default_PositionInfo_ClosingShortVolume
}

func (m *PositionInfo) GetQueuingShortVolume() uint64 {
	if m != nil && m.QueuingShortVolume != nil {
		return *m.QueuingShortVolume
	}
	return Default_PositionInfo_QueuingShortVolume
}

func (m *PositionInfo) GetMargin() float64 {
	if m != nil && m.Margin != nil {
		return *m.Margin
	}
	return Default_PositionInfo_Margin
}

type TimeDuration struct {
	StartTime        *uint64 `protobuf:"varint,1,opt" json:"StartTime,omitempty"`
	EndTime          *uint64 `protobuf:"varint,2,opt" json:"EndTime,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TimeDuration) Reset()         { *m = TimeDuration{} }
func (m *TimeDuration) String() string { return proto.CompactTextString(m) }
func (*TimeDuration) ProtoMessage()    {}

func (m *TimeDuration) GetStartTime() uint64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *TimeDuration) GetEndTime() uint64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

type AlgoInfo struct {
	ValidTimes       []*TimeDuration `protobuf:"bytes,1,rep" json:"ValidTimes,omitempty"`
	TickerName       *string         `protobuf:"bytes,2,opt" json:"TickerName,omitempty"`
	Account          *string         `protobuf:"bytes,3,opt" json:"Account,omitempty"`
	StrategyName     *string         `protobuf:"bytes,4,opt" json:"StrategyName,omitempty"`
	ExchangeName     *string         `protobuf:"bytes,5,opt" json:"ExchangeName,omitempty"`
	QuoteName        *string         `protobuf:"bytes,6,opt" json:"QuoteName,omitempty"`
	AlgoName         *string         `protobuf:"bytes,7,opt" json:"AlgoName,omitempty"`
	MaxLongPrice     *float64        `protobuf:"fixed64,8,opt" json:"MaxLongPrice,omitempty"`
	MinShortPrice    *float64        `protobuf:"fixed64,9,opt" json:"MinShortPrice,omitempty"`
	LongVolume       *uint64         `protobuf:"varint,10,opt,def=0" json:"LongVolume,omitempty"`
	ShortVolume      *uint64         `protobuf:"varint,11,opt,def=0" json:"ShortVolume,omitempty"`
	Force            *bool           `protobuf:"varint,12,opt,def=0" json:"Force,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *AlgoInfo) Reset()         { *m = AlgoInfo{} }
func (m *AlgoInfo) String() string { return proto.CompactTextString(m) }
func (*AlgoInfo) ProtoMessage()    {}

const Default_AlgoInfo_LongVolume uint64 = 0
const Default_AlgoInfo_ShortVolume uint64 = 0
const Default_AlgoInfo_Force bool = false

func (m *AlgoInfo) GetValidTimes() []*TimeDuration {
	if m != nil {
		return m.ValidTimes
	}
	return nil
}

func (m *AlgoInfo) GetTickerName() string {
	if m != nil && m.TickerName != nil {
		return *m.TickerName
	}
	return ""
}

func (m *AlgoInfo) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

func (m *AlgoInfo) GetStrategyName() string {
	if m != nil && m.StrategyName != nil {
		return *m.StrategyName
	}
	return ""
}

func (m *AlgoInfo) GetExchangeName() string {
	if m != nil && m.ExchangeName != nil {
		return *m.ExchangeName
	}
	return ""
}

func (m *AlgoInfo) GetQuoteName() string {
	if m != nil && m.QuoteName != nil {
		return *m.QuoteName
	}
	return ""
}

func (m *AlgoInfo) GetAlgoName() string {
	if m != nil && m.AlgoName != nil {
		return *m.AlgoName
	}
	return ""
}

func (m *AlgoInfo) GetMaxLongPrice() float64 {
	if m != nil && m.MaxLongPrice != nil {
		return *m.MaxLongPrice
	}
	return 0
}

func (m *AlgoInfo) GetMinShortPrice() float64 {
	if m != nil && m.MinShortPrice != nil {
		return *m.MinShortPrice
	}
	return 0
}

func (m *AlgoInfo) GetLongVolume() uint64 {
	if m != nil && m.LongVolume != nil {
		return *m.LongVolume
	}
	return Default_AlgoInfo_LongVolume
}

func (m *AlgoInfo) GetShortVolume() uint64 {
	if m != nil && m.ShortVolume != nil {
		return *m.ShortVolume
	}
	return Default_AlgoInfo_ShortVolume
}

func (m *AlgoInfo) GetForce() bool {
	if m != nil && m.Force != nil {
		return *m.Force
	}
	return Default_AlgoInfo_Force
}

type ReqTickerInfo struct {
	TickerName       *string      `protobuf:"bytes,1,opt" json:"TickerName,omitempty"`
	Type             *ConstDefine `protobuf:"varint,2,opt,enum=DataType.ConstDefine,def=13" json:"Type,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqTickerInfo) Reset()         { *m = ReqTickerInfo{} }
func (m *ReqTickerInfo) String() string { return proto.CompactTextString(m) }
func (*ReqTickerInfo) ProtoMessage()    {}

const Default_ReqTickerInfo_Type ConstDefine = ConstDefine_E_ReqTickerInfo

func (m *ReqTickerInfo) GetTickerName() string {
	if m != nil && m.TickerName != nil {
		return *m.TickerName
	}
	return ""
}

func (m *ReqTickerInfo) GetType() ConstDefine {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_ReqTickerInfo_Type
}

type RspTickerInfo struct {
	TickerName       *string         `protobuf:"bytes,1,opt" json:"TickerName,omitempty"`
	Multiplier       *uint64         `protobuf:"varint,2,opt" json:"Multiplier,omitempty"`
	MinMove          *float64        `protobuf:"fixed64,3,opt" json:"MinMove,omitempty"`
	Margin           *float64        `protobuf:"fixed64,4,opt" json:"Margin,omitempty"`
	TradingSession   []*TimeDuration `protobuf:"bytes,5,rep" json:"TradingSession,omitempty"`
	Type             *ConstDefine    `protobuf:"varint,6,opt,enum=DataType.ConstDefine,def=14" json:"Type,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *RspTickerInfo) Reset()         { *m = RspTickerInfo{} }
func (m *RspTickerInfo) String() string { return proto.CompactTextString(m) }
func (*RspTickerInfo) ProtoMessage()    {}

const Default_RspTickerInfo_Type ConstDefine = ConstDefine_E_RspTickerInfo

func (m *RspTickerInfo) GetTickerName() string {
	if m != nil && m.TickerName != nil {
		return *m.TickerName
	}
	return ""
}

func (m *RspTickerInfo) GetMultiplier() uint64 {
	if m != nil && m.Multiplier != nil {
		return *m.Multiplier
	}
	return 0
}

func (m *RspTickerInfo) GetMinMove() float64 {
	if m != nil && m.MinMove != nil {
		return *m.MinMove
	}
	return 0
}

func (m *RspTickerInfo) GetMargin() float64 {
	if m != nil && m.Margin != nil {
		return *m.Margin
	}
	return 0
}

func (m *RspTickerInfo) GetTradingSession() []*TimeDuration {
	if m != nil {
		return m.TradingSession
	}
	return nil
}

func (m *RspTickerInfo) GetType() ConstDefine {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_RspTickerInfo_Type
}

type ReqSendOrder struct {
	TickerName       *string         `protobuf:"bytes,1,opt" json:"TickerName,omitempty"`
	Account          *string         `protobuf:"bytes,2,opt" json:"Account,omitempty"`
	Direct           *OrderDirect    `protobuf:"varint,3,opt,enum=DataType.OrderDirect" json:"Direct,omitempty"`
	OpenClose        *OrderOpenClose `protobuf:"varint,4,opt,enum=DataType.OrderOpenClose" json:"OpenClose,omitempty"`
	Volume           *uint64         `protobuf:"varint,5,opt" json:"Volume,omitempty"`
	Price            *float64        `protobuf:"fixed64,6,opt" json:"Price,omitempty"`
	LastPrice        *float64        `protobuf:"fixed64,7,opt" json:"LastPrice,omitempty"`
	Type             *ConstDefine    `protobuf:"varint,8,opt,enum=DataType.ConstDefine,def=1" json:"Type,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ReqSendOrder) Reset()         { *m = ReqSendOrder{} }
func (m *ReqSendOrder) String() string { return proto.CompactTextString(m) }
func (*ReqSendOrder) ProtoMessage()    {}

const Default_ReqSendOrder_Type ConstDefine = ConstDefine_E_ReqSendOrder

func (m *ReqSendOrder) GetTickerName() string {
	if m != nil && m.TickerName != nil {
		return *m.TickerName
	}
	return ""
}

func (m *ReqSendOrder) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

func (m *ReqSendOrder) GetDirect() OrderDirect {
	if m != nil && m.Direct != nil {
		return *m.Direct
	}
	return OrderDirect_OrderDirect_Buy
}

func (m *ReqSendOrder) GetOpenClose() OrderOpenClose {
	if m != nil && m.OpenClose != nil {
		return *m.OpenClose
	}
	return OrderOpenClose_OrderOpenClose_Open
}

func (m *ReqSendOrder) GetVolume() uint64 {
	if m != nil && m.Volume != nil {
		return *m.Volume
	}
	return 0
}

func (m *ReqSendOrder) GetPrice() float64 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *ReqSendOrder) GetLastPrice() float64 {
	if m != nil && m.LastPrice != nil {
		return *m.LastPrice
	}
	return 0
}

func (m *ReqSendOrder) GetType() ConstDefine {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_ReqSendOrder_Type
}

type RspSendOrder struct {
	LastReport       *OrderInfo   `protobuf:"bytes,1,opt" json:"LastReport,omitempty"`
	Type             *ConstDefine `protobuf:"varint,2,opt,enum=DataType.ConstDefine,def=2" json:"Type,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspSendOrder) Reset()         { *m = RspSendOrder{} }
func (m *RspSendOrder) String() string { return proto.CompactTextString(m) }
func (*RspSendOrder) ProtoMessage()    {}

const Default_RspSendOrder_Type ConstDefine = ConstDefine_E_RspSendOrder

func (m *RspSendOrder) GetLastReport() *OrderInfo {
	if m != nil {
		return m.LastReport
	}
	return nil
}

func (m *RspSendOrder) GetType() ConstDefine {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_RspSendOrder_Type
}

type ReqCancelOrder struct {
	TickerName       *string      `protobuf:"bytes,1,opt" json:"TickerName,omitempty"`
	Account          *string      `protobuf:"bytes,2,opt" json:"Account,omitempty"`
	OrderID          *string      `protobuf:"bytes,3,opt" json:"OrderID,omitempty"`
	Type             *ConstDefine `protobuf:"varint,4,opt,enum=DataType.ConstDefine,def=3" json:"Type,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqCancelOrder) Reset()         { *m = ReqCancelOrder{} }
func (m *ReqCancelOrder) String() string { return proto.CompactTextString(m) }
func (*ReqCancelOrder) ProtoMessage()    {}

const Default_ReqCancelOrder_Type ConstDefine = ConstDefine_E_ReqCancelOrder

func (m *ReqCancelOrder) GetTickerName() string {
	if m != nil && m.TickerName != nil {
		return *m.TickerName
	}
	return ""
}

func (m *ReqCancelOrder) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

func (m *ReqCancelOrder) GetOrderID() string {
	if m != nil && m.OrderID != nil {
		return *m.OrderID
	}
	return ""
}

func (m *ReqCancelOrder) GetType() ConstDefine {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_ReqCancelOrder_Type
}

type RspCancelOrder struct {
	LastReport       *OrderInfo   `protobuf:"bytes,1,opt" json:"LastReport,omitempty"`
	Type             *ConstDefine `protobuf:"varint,2,opt,enum=DataType.ConstDefine,def=4" json:"Type,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspCancelOrder) Reset()         { *m = RspCancelOrder{} }
func (m *RspCancelOrder) String() string { return proto.CompactTextString(m) }
func (*RspCancelOrder) ProtoMessage()    {}

const Default_RspCancelOrder_Type ConstDefine = ConstDefine_E_RspCancelOrder

func (m *RspCancelOrder) GetLastReport() *OrderInfo {
	if m != nil {
		return m.LastReport
	}
	return nil
}

func (m *RspCancelOrder) GetType() ConstDefine {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_RspCancelOrder_Type
}

type ReqOrdersInfo struct {
	TickerName       *string      `protobuf:"bytes,1,opt" json:"TickerName,omitempty"`
	Account          *string      `protobuf:"bytes,2,opt" json:"Account,omitempty"`
	ReqStatus        *OrderStatus `protobuf:"varint,3,opt,enum=DataType.OrderStatus" json:"ReqStatus,omitempty"`
	Type             *ConstDefine `protobuf:"varint,4,opt,enum=DataType.ConstDefine,def=5" json:"Type,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqOrdersInfo) Reset()         { *m = ReqOrdersInfo{} }
func (m *ReqOrdersInfo) String() string { return proto.CompactTextString(m) }
func (*ReqOrdersInfo) ProtoMessage()    {}

const Default_ReqOrdersInfo_Type ConstDefine = ConstDefine_E_ReqOrdersInfo

func (m *ReqOrdersInfo) GetTickerName() string {
	if m != nil && m.TickerName != nil {
		return *m.TickerName
	}
	return ""
}

func (m *ReqOrdersInfo) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

func (m *ReqOrdersInfo) GetReqStatus() OrderStatus {
	if m != nil && m.ReqStatus != nil {
		return *m.ReqStatus
	}
	return OrderStatus_OrderStatus_NIL
}

func (m *ReqOrdersInfo) GetType() ConstDefine {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_ReqOrdersInfo_Type
}

type RspOrdersInfo struct {
	Order            []*OrderInfo `protobuf:"bytes,1,rep" json:"Order,omitempty"`
	Type             *ConstDefine `protobuf:"varint,2,opt,enum=DataType.ConstDefine,def=6" json:"Type,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspOrdersInfo) Reset()         { *m = RspOrdersInfo{} }
func (m *RspOrdersInfo) String() string { return proto.CompactTextString(m) }
func (*RspOrdersInfo) ProtoMessage()    {}

const Default_RspOrdersInfo_Type ConstDefine = ConstDefine_E_RspOrdersInfo

func (m *RspOrdersInfo) GetOrder() []*OrderInfo {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *RspOrdersInfo) GetType() ConstDefine {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_RspOrdersInfo_Type
}

type ReqPosition struct {
	TickerName       *string      `protobuf:"bytes,1,opt" json:"TickerName,omitempty"`
	Account          *string      `protobuf:"bytes,2,opt" json:"Account,omitempty"`
	Type             *ConstDefine `protobuf:"varint,3,opt,enum=DataType.ConstDefine,def=7" json:"Type,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqPosition) Reset()         { *m = ReqPosition{} }
func (m *ReqPosition) String() string { return proto.CompactTextString(m) }
func (*ReqPosition) ProtoMessage()    {}

const Default_ReqPosition_Type ConstDefine = ConstDefine_E_ReqPosition

func (m *ReqPosition) GetTickerName() string {
	if m != nil && m.TickerName != nil {
		return *m.TickerName
	}
	return ""
}

func (m *ReqPosition) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

func (m *ReqPosition) GetType() ConstDefine {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_ReqPosition_Type
}

type RspPosition struct {
	Position         []*PositionInfo `protobuf:"bytes,1,rep" json:"Position,omitempty"`
	Type             *ConstDefine    `protobuf:"varint,2,opt,enum=DataType.ConstDefine,def=8" json:"Type,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *RspPosition) Reset()         { *m = RspPosition{} }
func (m *RspPosition) String() string { return proto.CompactTextString(m) }
func (*RspPosition) ProtoMessage()    {}

const Default_RspPosition_Type ConstDefine = ConstDefine_E_RspPosition

func (m *RspPosition) GetPosition() []*PositionInfo {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *RspPosition) GetType() ConstDefine {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_RspPosition_Type
}

type ReqAccount struct {
	Account          *string      `protobuf:"bytes,1,opt" json:"Account,omitempty"`
	Type             *ConstDefine `protobuf:"varint,2,opt,enum=DataType.ConstDefine,def=9" json:"Type,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqAccount) Reset()         { *m = ReqAccount{} }
func (m *ReqAccount) String() string { return proto.CompactTextString(m) }
func (*ReqAccount) ProtoMessage()    {}

const Default_ReqAccount_Type ConstDefine = ConstDefine_E_ReqAccount

func (m *ReqAccount) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

func (m *ReqAccount) GetType() ConstDefine {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_ReqAccount_Type
}

type RspAccount struct {
	Account          *string         `protobuf:"bytes,1,opt" json:"Account,omitempty"`
	Available        *float64        `protobuf:"fixed64,2,opt" json:"Available,omitempty"`
	Margin           *float64        `protobuf:"fixed64,3,opt" json:"Margin,omitempty"`
	Positions        []*PositionInfo `protobuf:"bytes,4,rep" json:"Positions,omitempty"`
	Orders           []*OrderInfo    `protobuf:"bytes,5,rep" json:"Orders,omitempty"`
	Type             *ConstDefine    `protobuf:"varint,6,opt,enum=DataType.ConstDefine,def=10" json:"Type,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *RspAccount) Reset()         { *m = RspAccount{} }
func (m *RspAccount) String() string { return proto.CompactTextString(m) }
func (*RspAccount) ProtoMessage()    {}

const Default_RspAccount_Type ConstDefine = ConstDefine_E_RspAccount

func (m *RspAccount) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

func (m *RspAccount) GetAvailable() float64 {
	if m != nil && m.Available != nil {
		return *m.Available
	}
	return 0
}

func (m *RspAccount) GetMargin() float64 {
	if m != nil && m.Margin != nil {
		return *m.Margin
	}
	return 0
}

func (m *RspAccount) GetPositions() []*PositionInfo {
	if m != nil {
		return m.Positions
	}
	return nil
}

func (m *RspAccount) GetOrders() []*OrderInfo {
	if m != nil {
		return m.Orders
	}
	return nil
}

func (m *RspAccount) GetType() ConstDefine {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_RspAccount_Type
}

type ReqAlgoOrder struct {
	Algo             *AlgoInfo    `protobuf:"bytes,1,opt" json:"Algo,omitempty"`
	Type             *ConstDefine `protobuf:"varint,2,opt,enum=DataType.ConstDefine,def=11" json:"Type,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqAlgoOrder) Reset()         { *m = ReqAlgoOrder{} }
func (m *ReqAlgoOrder) String() string { return proto.CompactTextString(m) }
func (*ReqAlgoOrder) ProtoMessage()    {}

const Default_ReqAlgoOrder_Type ConstDefine = ConstDefine_E_ReqAlgoOrder

func (m *ReqAlgoOrder) GetAlgo() *AlgoInfo {
	if m != nil {
		return m.Algo
	}
	return nil
}

func (m *ReqAlgoOrder) GetType() ConstDefine {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_ReqAlgoOrder_Type
}

type RspAlgoOrder struct {
	Algo             *AlgoInfo    `protobuf:"bytes,1,opt" json:"Algo,omitempty"`
	Type             *ConstDefine `protobuf:"varint,2,opt,enum=DataType.ConstDefine,def=12" json:"Type,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspAlgoOrder) Reset()         { *m = RspAlgoOrder{} }
func (m *RspAlgoOrder) String() string { return proto.CompactTextString(m) }
func (*RspAlgoOrder) ProtoMessage()    {}

const Default_RspAlgoOrder_Type ConstDefine = ConstDefine_E_RspAlgoOrder

func (m *RspAlgoOrder) GetAlgo() *AlgoInfo {
	if m != nil {
		return m.Algo
	}
	return nil
}

func (m *RspAlgoOrder) GetType() ConstDefine {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_RspAlgoOrder_Type
}

type DepthMarketData struct {
	TickerName       *string         `protobuf:"bytes,1,opt" json:"TickerName,omitempty"`
	Time             *uint64         `protobuf:"varint,2,opt" json:"Time,omitempty"`
	Volume           *uint64         `protobuf:"varint,3,opt" json:"Volume,omitempty"`
	OpenInterest     *uint64         `protobuf:"varint,4,opt" json:"OpenInterest,omitempty"`
	Turnover         *float64        `protobuf:"fixed64,5,opt" json:"Turnover,omitempty"`
	LastPrice        *float64        `protobuf:"fixed64,6,opt" json:"LastPrice,omitempty"`
	BuyPrice         []float64       `protobuf:"fixed64,7,rep" json:"BuyPrice,omitempty"`
	SellPrice        []float64       `protobuf:"fixed64,8,rep" json:"SellPrice,omitempty"`
	BuyVolume        []uint64        `protobuf:"varint,9,rep" json:"BuyVolume,omitempty"`
	SellVolume       []uint64        `protobuf:"varint,10,rep" json:"SellVolume,omitempty"`
	LocalTime        *uint64         `protobuf:"varint,11,opt" json:"LocalTime,omitempty"`
	Position         []*PositionInfo `protobuf:"bytes,12,rep" json:"Position,omitempty"`
	Order            []*OrderInfo    `protobuf:"bytes,13,rep" json:"Order,omitempty"`
	Settlement       *float64        `protobuf:"fixed64,14,opt" json:"Settlement,omitempty"`
	Type             *ConstDefine    `protobuf:"varint,15,opt,enum=DataType.ConstDefine,def=100" json:"Type,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *DepthMarketData) Reset()         { *m = DepthMarketData{} }
func (m *DepthMarketData) String() string { return proto.CompactTextString(m) }
func (*DepthMarketData) ProtoMessage()    {}

const Default_DepthMarketData_Type ConstDefine = ConstDefine_E_DepthMarketData

func (m *DepthMarketData) GetTickerName() string {
	if m != nil && m.TickerName != nil {
		return *m.TickerName
	}
	return ""
}

func (m *DepthMarketData) GetTime() uint64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *DepthMarketData) GetVolume() uint64 {
	if m != nil && m.Volume != nil {
		return *m.Volume
	}
	return 0
}

func (m *DepthMarketData) GetOpenInterest() uint64 {
	if m != nil && m.OpenInterest != nil {
		return *m.OpenInterest
	}
	return 0
}

func (m *DepthMarketData) GetTurnover() float64 {
	if m != nil && m.Turnover != nil {
		return *m.Turnover
	}
	return 0
}

func (m *DepthMarketData) GetLastPrice() float64 {
	if m != nil && m.LastPrice != nil {
		return *m.LastPrice
	}
	return 0
}

func (m *DepthMarketData) GetBuyPrice() []float64 {
	if m != nil {
		return m.BuyPrice
	}
	return nil
}

func (m *DepthMarketData) GetSellPrice() []float64 {
	if m != nil {
		return m.SellPrice
	}
	return nil
}

func (m *DepthMarketData) GetBuyVolume() []uint64 {
	if m != nil {
		return m.BuyVolume
	}
	return nil
}

func (m *DepthMarketData) GetSellVolume() []uint64 {
	if m != nil {
		return m.SellVolume
	}
	return nil
}

func (m *DepthMarketData) GetLocalTime() uint64 {
	if m != nil && m.LocalTime != nil {
		return *m.LocalTime
	}
	return 0
}

func (m *DepthMarketData) GetPosition() []*PositionInfo {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *DepthMarketData) GetOrder() []*OrderInfo {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *DepthMarketData) GetSettlement() float64 {
	if m != nil && m.Settlement != nil {
		return *m.Settlement
	}
	return 0
}

func (m *DepthMarketData) GetType() ConstDefine {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_DepthMarketData_Type
}

type StaticMarketData struct {
	TickerName         *string         `protobuf:"bytes,1,opt" json:"TickerName,omitempty"`
	Time               *uint64         `protobuf:"varint,2,opt" json:"Time,omitempty"`
	PreOpenInterest    *uint64         `protobuf:"varint,3,opt" json:"PreOpenInterest,omitempty"`
	PreSettlementPrice *float64        `protobuf:"fixed64,4,opt" json:"PreSettlementPrice,omitempty"`
	PreClosePrice      *float64        `protobuf:"fixed64,5,opt" json:"PreClosePrice,omitempty"`
	OpenPrice          *float64        `protobuf:"fixed64,6,opt" json:"OpenPrice,omitempty"`
	HighestPrice       *float64        `protobuf:"fixed64,7,opt" json:"HighestPrice,omitempty"`
	LowestPrice        *float64        `protobuf:"fixed64,8,opt" json:"LowestPrice,omitempty"`
	ClosePrice         *float64        `protobuf:"fixed64,9,opt" json:"ClosePrice,omitempty"`
	UpperLimitPrice    *float64        `protobuf:"fixed64,10,opt" json:"UpperLimitPrice,omitempty"`
	LowerLimitPrice    *float64        `protobuf:"fixed64,11,opt" json:"LowerLimitPrice,omitempty"`
	SettlementPrice    *float64        `protobuf:"fixed64,12,opt" json:"SettlementPrice,omitempty"`
	Position           []*PositionInfo `protobuf:"bytes,13,rep" json:"Position,omitempty"`
	Order              []*OrderInfo    `protobuf:"bytes,14,rep" json:"Order,omitempty"`
	Type               *ConstDefine    `protobuf:"varint,15,opt,enum=DataType.ConstDefine,def=101" json:"Type,omitempty"`
	XXX_unrecognized   []byte          `json:"-"`
}

func (m *StaticMarketData) Reset()         { *m = StaticMarketData{} }
func (m *StaticMarketData) String() string { return proto.CompactTextString(m) }
func (*StaticMarketData) ProtoMessage()    {}

const Default_StaticMarketData_Type ConstDefine = ConstDefine_E_StaticMarketData

func (m *StaticMarketData) GetTickerName() string {
	if m != nil && m.TickerName != nil {
		return *m.TickerName
	}
	return ""
}

func (m *StaticMarketData) GetTime() uint64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *StaticMarketData) GetPreOpenInterest() uint64 {
	if m != nil && m.PreOpenInterest != nil {
		return *m.PreOpenInterest
	}
	return 0
}

func (m *StaticMarketData) GetPreSettlementPrice() float64 {
	if m != nil && m.PreSettlementPrice != nil {
		return *m.PreSettlementPrice
	}
	return 0
}

func (m *StaticMarketData) GetPreClosePrice() float64 {
	if m != nil && m.PreClosePrice != nil {
		return *m.PreClosePrice
	}
	return 0
}

func (m *StaticMarketData) GetOpenPrice() float64 {
	if m != nil && m.OpenPrice != nil {
		return *m.OpenPrice
	}
	return 0
}

func (m *StaticMarketData) GetHighestPrice() float64 {
	if m != nil && m.HighestPrice != nil {
		return *m.HighestPrice
	}
	return 0
}

func (m *StaticMarketData) GetLowestPrice() float64 {
	if m != nil && m.LowestPrice != nil {
		return *m.LowestPrice
	}
	return 0
}

func (m *StaticMarketData) GetClosePrice() float64 {
	if m != nil && m.ClosePrice != nil {
		return *m.ClosePrice
	}
	return 0
}

func (m *StaticMarketData) GetUpperLimitPrice() float64 {
	if m != nil && m.UpperLimitPrice != nil {
		return *m.UpperLimitPrice
	}
	return 0
}

func (m *StaticMarketData) GetLowerLimitPrice() float64 {
	if m != nil && m.LowerLimitPrice != nil {
		return *m.LowerLimitPrice
	}
	return 0
}

func (m *StaticMarketData) GetSettlementPrice() float64 {
	if m != nil && m.SettlementPrice != nil {
		return *m.SettlementPrice
	}
	return 0
}

func (m *StaticMarketData) GetPosition() []*PositionInfo {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *StaticMarketData) GetOrder() []*OrderInfo {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *StaticMarketData) GetType() ConstDefine {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_StaticMarketData_Type
}

type TOHLCV struct {
	StartTime        *uint64  `protobuf:"varint,1,opt" json:"StartTime,omitempty"`
	EndTime          *uint64  `protobuf:"varint,2,opt" json:"EndTime,omitempty"`
	OpenPrice        *float64 `protobuf:"fixed64,3,opt" json:"OpenPrice,omitempty"`
	HighPrice        *float64 `protobuf:"fixed64,4,opt" json:"HighPrice,omitempty"`
	LowPrice         *float64 `protobuf:"fixed64,5,opt" json:"LowPrice,omitempty"`
	ClosePrice       *float64 `protobuf:"fixed64,6,opt" json:"ClosePrice,omitempty"`
	Volume           *uint64  `protobuf:"varint,7,opt" json:"Volume,omitempty"`
	TotalVolume      *uint64  `protobuf:"varint,8,opt" json:"TotalVolume,omitempty"`
	OpenInterest     *uint64  `protobuf:"varint,9,opt" json:"OpenInterest,omitempty"`
	Turnover         *float64 `protobuf:"fixed64,10,opt" json:"Turnover,omitempty"`
	Settlement       *float64 `protobuf:"fixed64,11,opt" json:"Settlement,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *TOHLCV) Reset()         { *m = TOHLCV{} }
func (m *TOHLCV) String() string { return proto.CompactTextString(m) }
func (*TOHLCV) ProtoMessage()    {}

func (m *TOHLCV) GetStartTime() uint64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *TOHLCV) GetEndTime() uint64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *TOHLCV) GetOpenPrice() float64 {
	if m != nil && m.OpenPrice != nil {
		return *m.OpenPrice
	}
	return 0
}

func (m *TOHLCV) GetHighPrice() float64 {
	if m != nil && m.HighPrice != nil {
		return *m.HighPrice
	}
	return 0
}

func (m *TOHLCV) GetLowPrice() float64 {
	if m != nil && m.LowPrice != nil {
		return *m.LowPrice
	}
	return 0
}

func (m *TOHLCV) GetClosePrice() float64 {
	if m != nil && m.ClosePrice != nil {
		return *m.ClosePrice
	}
	return 0
}

func (m *TOHLCV) GetVolume() uint64 {
	if m != nil && m.Volume != nil {
		return *m.Volume
	}
	return 0
}

func (m *TOHLCV) GetTotalVolume() uint64 {
	if m != nil && m.TotalVolume != nil {
		return *m.TotalVolume
	}
	return 0
}

func (m *TOHLCV) GetOpenInterest() uint64 {
	if m != nil && m.OpenInterest != nil {
		return *m.OpenInterest
	}
	return 0
}

func (m *TOHLCV) GetTurnover() float64 {
	if m != nil && m.Turnover != nil {
		return *m.Turnover
	}
	return 0
}

func (m *TOHLCV) GetSettlement() float64 {
	if m != nil && m.Settlement != nil {
		return *m.Settlement
	}
	return 0
}

type ReqKLine struct {
	TickerName       *string      `protobuf:"bytes,1,opt" json:"TickerName,omitempty"`
	StartTime        *uint64      `protobuf:"varint,2,opt" json:"StartTime,omitempty"`
	EndTime          *uint64      `protobuf:"varint,3,opt" json:"EndTime,omitempty"`
	Req_Minute       *bool        `protobuf:"varint,4,opt,name=req_Minute,def=0" json:"req_Minute,omitempty"`
	Req_Day          *bool        `protobuf:"varint,5,opt,name=req_Day,def=0" json:"req_Day,omitempty"`
	Req_Second       *bool        `protobuf:"varint,6,opt,name=req_Second,def=0" json:"req_Second,omitempty"`
	Num_Seconds      *uint64      `protobuf:"varint,7,opt,name=num_Seconds,def=1" json:"num_Seconds,omitempty"`
	Num_Minutes      *uint64      `protobuf:"varint,8,opt,name=num_Minutes,def=1" json:"num_Minutes,omitempty"`
	Num_Days         *uint64      `protobuf:"varint,9,opt,name=num_Days,def=1" json:"num_Days,omitempty"`
	Type             *ConstDefine `protobuf:"varint,10,opt,enum=DataType.ConstDefine,def=102" json:"Type,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqKLine) Reset()         { *m = ReqKLine{} }
func (m *ReqKLine) String() string { return proto.CompactTextString(m) }
func (*ReqKLine) ProtoMessage()    {}

const Default_ReqKLine_Req_Minute bool = false
const Default_ReqKLine_Req_Day bool = false
const Default_ReqKLine_Req_Second bool = false
const Default_ReqKLine_Num_Seconds uint64 = 1
const Default_ReqKLine_Num_Minutes uint64 = 1
const Default_ReqKLine_Num_Days uint64 = 1
const Default_ReqKLine_Type ConstDefine = ConstDefine_E_ReqKLine

func (m *ReqKLine) GetTickerName() string {
	if m != nil && m.TickerName != nil {
		return *m.TickerName
	}
	return ""
}

func (m *ReqKLine) GetStartTime() uint64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *ReqKLine) GetEndTime() uint64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *ReqKLine) GetReq_Minute() bool {
	if m != nil && m.Req_Minute != nil {
		return *m.Req_Minute
	}
	return Default_ReqKLine_Req_Minute
}

func (m *ReqKLine) GetReq_Day() bool {
	if m != nil && m.Req_Day != nil {
		return *m.Req_Day
	}
	return Default_ReqKLine_Req_Day
}

func (m *ReqKLine) GetReq_Second() bool {
	if m != nil && m.Req_Second != nil {
		return *m.Req_Second
	}
	return Default_ReqKLine_Req_Second
}

func (m *ReqKLine) GetNum_Seconds() uint64 {
	if m != nil && m.Num_Seconds != nil {
		return *m.Num_Seconds
	}
	return Default_ReqKLine_Num_Seconds
}

func (m *ReqKLine) GetNum_Minutes() uint64 {
	if m != nil && m.Num_Minutes != nil {
		return *m.Num_Minutes
	}
	return Default_ReqKLine_Num_Minutes
}

func (m *ReqKLine) GetNum_Days() uint64 {
	if m != nil && m.Num_Days != nil {
		return *m.Num_Days
	}
	return Default_ReqKLine_Num_Days
}

func (m *ReqKLine) GetType() ConstDefine {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_ReqKLine_Type
}

type RspKLine struct {
	TickerName       *string      `protobuf:"bytes,1,opt" json:"TickerName,omitempty"`
	StartTime        *uint64      `protobuf:"varint,2,opt" json:"StartTime,omitempty"`
	EndTime          *uint64      `protobuf:"varint,3,opt" json:"EndTime,omitempty"`
	Bar_Minute       []*TOHLCV    `protobuf:"bytes,4,rep" json:"Bar_Minute,omitempty"`
	Bar_Day          []*TOHLCV    `protobuf:"bytes,5,rep" json:"Bar_Day,omitempty"`
	Bar_Second       []*TOHLCV    `protobuf:"bytes,6,rep" json:"Bar_Second,omitempty"`
	Num_Seconds      *uint64      `protobuf:"varint,7,opt,name=num_Seconds,def=1" json:"num_Seconds,omitempty"`
	Num_Minutes      *uint64      `protobuf:"varint,8,opt,name=num_Minutes,def=1" json:"num_Minutes,omitempty"`
	Num_Days         *uint64      `protobuf:"varint,9,opt,name=num_Days,def=1" json:"num_Days,omitempty"`
	Type             *ConstDefine `protobuf:"varint,14,opt,enum=DataType.ConstDefine,def=103" json:"Type,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspKLine) Reset()         { *m = RspKLine{} }
func (m *RspKLine) String() string { return proto.CompactTextString(m) }
func (*RspKLine) ProtoMessage()    {}

const Default_RspKLine_Num_Seconds uint64 = 1
const Default_RspKLine_Num_Minutes uint64 = 1
const Default_RspKLine_Num_Days uint64 = 1
const Default_RspKLine_Type ConstDefine = ConstDefine_E_RspKLine

func (m *RspKLine) GetTickerName() string {
	if m != nil && m.TickerName != nil {
		return *m.TickerName
	}
	return ""
}

func (m *RspKLine) GetStartTime() uint64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *RspKLine) GetEndTime() uint64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *RspKLine) GetBar_Minute() []*TOHLCV {
	if m != nil {
		return m.Bar_Minute
	}
	return nil
}

func (m *RspKLine) GetBar_Day() []*TOHLCV {
	if m != nil {
		return m.Bar_Day
	}
	return nil
}

func (m *RspKLine) GetBar_Second() []*TOHLCV {
	if m != nil {
		return m.Bar_Second
	}
	return nil
}

func (m *RspKLine) GetNum_Seconds() uint64 {
	if m != nil && m.Num_Seconds != nil {
		return *m.Num_Seconds
	}
	return Default_RspKLine_Num_Seconds
}

func (m *RspKLine) GetNum_Minutes() uint64 {
	if m != nil && m.Num_Minutes != nil {
		return *m.Num_Minutes
	}
	return Default_RspKLine_Num_Minutes
}

func (m *RspKLine) GetNum_Days() uint64 {
	if m != nil && m.Num_Days != nil {
		return *m.Num_Days
	}
	return Default_RspKLine_Num_Days
}

func (m *RspKLine) GetType() ConstDefine {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_RspKLine_Type
}

type ReqTick struct {
	TickerName       *string      `protobuf:"bytes,1,opt" json:"TickerName,omitempty"`
	StartTime        *uint64      `protobuf:"varint,2,opt" json:"StartTime,omitempty"`
	EndTime          *uint64      `protobuf:"varint,3,opt" json:"EndTime,omitempty"`
	Type             *ConstDefine `protobuf:"varint,4,opt,enum=DataType.ConstDefine,def=104" json:"Type,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqTick) Reset()         { *m = ReqTick{} }
func (m *ReqTick) String() string { return proto.CompactTextString(m) }
func (*ReqTick) ProtoMessage()    {}

const Default_ReqTick_Type ConstDefine = ConstDefine_E_ReqTick

func (m *ReqTick) GetTickerName() string {
	if m != nil && m.TickerName != nil {
		return *m.TickerName
	}
	return ""
}

func (m *ReqTick) GetStartTime() uint64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *ReqTick) GetEndTime() uint64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *ReqTick) GetType() ConstDefine {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_ReqTick_Type
}

type RspTick struct {
	TickerName       *string            `protobuf:"bytes,1,opt" json:"TickerName,omitempty"`
	StartTime        *uint64            `protobuf:"varint,2,opt" json:"StartTime,omitempty"`
	EndTime          *uint64            `protobuf:"varint,3,opt" json:"EndTime,omitempty"`
	Ticks            []*DepthMarketData `protobuf:"bytes,4,rep" json:"Ticks,omitempty"`
	Type             *ConstDefine       `protobuf:"varint,5,opt,enum=DataType.ConstDefine,def=105" json:"Type,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *RspTick) Reset()         { *m = RspTick{} }
func (m *RspTick) String() string { return proto.CompactTextString(m) }
func (*RspTick) ProtoMessage()    {}

const Default_RspTick_Type ConstDefine = ConstDefine_E_RspTick

func (m *RspTick) GetTickerName() string {
	if m != nil && m.TickerName != nil {
		return *m.TickerName
	}
	return ""
}

func (m *RspTick) GetStartTime() uint64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *RspTick) GetEndTime() uint64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *RspTick) GetTicks() []*DepthMarketData {
	if m != nil {
		return m.Ticks
	}
	return nil
}

func (m *RspTick) GetType() ConstDefine {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_RspTick_Type
}

type HeartBeat struct {
	Type             *ConstDefine `protobuf:"varint,1,opt,enum=DataType.ConstDefine,def=1000000" json:"Type,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HeartBeat) Reset()         { *m = HeartBeat{} }
func (m *HeartBeat) String() string { return proto.CompactTextString(m) }
func (*HeartBeat) ProtoMessage()    {}

const Default_HeartBeat_Type ConstDefine = ConstDefine_E_HeartBeat

func (m *HeartBeat) GetType() ConstDefine {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_HeartBeat_Type
}

func init() {
	proto.RegisterEnum("DataType.ConstDefine", ConstDefine_name, ConstDefine_value)
	proto.RegisterEnum("DataType.OrderStatus", OrderStatus_name, OrderStatus_value)
	proto.RegisterEnum("DataType.OrderDirect", OrderDirect_name, OrderDirect_value)
	proto.RegisterEnum("DataType.OrderOpenClose", OrderOpenClose_name, OrderOpenClose_value)
}
